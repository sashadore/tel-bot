from flask import Flask, request
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import os
import asyncio
import logging

logging.basicConfig(level=logging.INFO)

TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN is not set")

app = Flask(__name__)

telegram_app = ApplicationBuilder().token(TOKEN).build()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ üëã")

telegram_app.add_handler(CommandHandler("start", start))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ‚Äî –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
async def initialize_bot():
    await telegram_app.initialize()
    await telegram_app.start()
    logging.info("Telegram bot initialized")

# –•—Ä–∞–Ω–∏–º event loop –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞—Ä–∞–Ω–µ–µ
loop = asyncio.new_event_loop()
asyncio.set_event_loop(loop)
loop.run_until_complete(initialize_bot())

@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    try:
        # Telegram –ø—Ä–∏—Å—ã–ª–∞–µ—Ç JSON –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        update = Update.de_json(request.get_json(force=True), telegram_app.bot)
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        loop.run_until_complete(telegram_app.process_update(update))
        return "OK"
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–µ–±—Ö—É–∫–∞")
        return "Internal Server Error", 500

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –Ω–∞ –ø–æ—Ä—Ç—É 5000
    app.run(host="0.0.0.0", port=5000)

import os
import logging
import asyncio

from flask import Flask, request
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN env variable is not set")

app = Flask(__name__)

telegram_app = ApplicationBuilder().token(TOKEN).build()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id}")
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ üëã")

telegram_app.add_handler(CommandHandler("start", start))

@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    logger.info("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç Telegram")
    update_json = request.get_json(force=True)
    update = Update.de_json(update_json, telegram_app.bot)

    # –ü–æ–ª—É—á–∞–µ–º event loop –∏–∑ telegram_app
    loop = telegram_app.updater._loop if hasattr(telegram_app, 'updater') else asyncio.get_event_loop()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å–∏–Ω–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
    try:
        loop.run_until_complete(telegram_app.process_update(update))
    except RuntimeError as e:
        # –ï—Å–ª–∏ loop —É–∂–µ –∑–∞–ø—É—â–µ–Ω (–≤ —Å–ª—É—á–∞–µ reloader), —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π loop –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≤ –Ω—ë–º
        logger.warning(f"–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —É–∂–µ –∑–∞–ø—É—â–µ–Ω: {e}, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ü–∏–∫–ª")
        new_loop = asyncio.new_event_loop()
        new_loop.run_until_complete(telegram_app.process_update(update))

    return "OK"

if __name__ == "__main__":
    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    telegram_app.initialize()
    port = int(os.environ.get("PORT", 5000))
    logger.info(f"–ó–∞–ø—É—Å–∫ Flask –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host="0.0.0.0", port=port)
